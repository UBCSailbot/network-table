cmake_minimum_required(VERSION 2.8)

set(CMAKE_C_COMPILER "clang")
set(CMAKE_CXX_COMPILER "clang++")

project(network-table CXX)

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -g -std=c++14 -Wall -Wextra -O0")
set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -O2")
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)

set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)

############
# INCLUDES #
############

# Include libraries
include(lib/core_libs.cmake)

#########
# FLAGS #
#########

# Define the command-line flags that should be accessible to programs
option(SAILBOT_DEBUG "Whether to build the project with the SAILBOT_DEBUG variable defined at the preprocessor level" OFF)
option(SAVE_TREE "Whether or not to save the network table tree to the disk whenever it changes." ON)
if(SAILBOT_DEBUG)
  add_definitions(-DSAILBOT_DEBUG)
endif()
if(SAVE_TREE)
    add_definitions(-DSAVE_TREE)
endif()

############
# PROGRAMS #
############

set(ProtobufIncludePath ${CMAKE_CURRENT_BINARY_DIR}/src)

# Include library files to avoid ugly relative paths
include_directories(src ${ProtobufIncludePath})

# Add main library
add_subdirectory(src)

# Add projects (all executables)
add_subdirectory(projects)

# Add tests
add_subdirectory(test)
